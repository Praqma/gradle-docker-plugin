apply plugin: 'eclipse'
apply plugin: 'docker'

repositories {
	mavenLocal()
	jcenter()
}

docker {

	image('mysql') {  from 'src/main/docker/mysql' }

	image('webserver') {
		from 'src/main/docker/webserver'
		from({ project(':StudentEnrollmentWithSpring').war }) { rename { 'student.war'} }
	}

	appliance('student') {
		def deployDir = "/Users/jan/tmp/webapps"

		task deployWar(type: Copy) { into deployDir }

		container('mysql') {
			localImage = 'mysql'
			createTasks()
		}

		container('studentApp') {
			localImage = 'webserver'
			env TOMCAT_PASS: 'password'
			port 8080, 8080
			link 'mysql', 'dbserver'
		}
	}

	def dataDir = "/Users/jan/tmp/data"
	def appPort = 8090
	def mongoImage = 'mongo'
	def busybox = { repository = 'busybox' }

	image('sampleapp') { from 'src/main/docker/node' }

	appliance('demo') {

		def appServer = container('appserver') {
			link 'mongodb', 'db'
			localImage = 'sampleapp'
			port appPort, 8080
		}

		container('mongodb') {
			image {
				repository = 'mongo'
				tag = '2.7.5'
			}
			volumesFrom 'data'
		}

		container('data') {
			image busybox
			volume "${dataDir}/db"
		}

		whenStarted { println "Application running on http://${appServer.host.host}:${appPort}" }
		whenStopped { println "Demo stopped" }
	}

	/*
	 appliance('mega') {
	 for (int n in 1..20) {
	 def appServer = container("appserver${n}") {
	 link "mongodb${n}", 'db'
	 localImage = 'sampleapp'
	 port 10000+n, 8080
	 }
	 container("mongodb${n}") {
	 image {
	 repository = 'mongo'
	 tag = '2.7.5'
	 }
	 }
	 }
	 }
	 */
}

task systemTest {
	dependsOn applianceStudentStart
	finalizedBy applianceStudentDestroy
	
}