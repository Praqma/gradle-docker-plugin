plugins { id 'com.jfrog.bintray' version '1.1' }

apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

repositories {  
	// mavenLocal()
	jcenter()  }

targetCompatibility = sourceCompatibility = '1.7'

group = 'net.praqma.gradle'
version = '0.7-SNAPSHOT'
description = 'Gradle plugin to orchestrate Docker containers'

ext {
	pluginId = 'net.praqma.docker'
	artifact = 'gradle-docker-plugin'
	github = 'https://github.com/Praqma/gradle-docker-plugin'
}

dependencies {
	//compile localGroovy()
	compile "org.codehaus.groovy:groovy-all:${GroovySystem.version}"

	compile 'com.github.docker-java:docker-java:0.10.4'

	testCompile 'com.google.guava:guava:18+'
	testCompile 'junit:junit:4.11'
	testCompile 'org.hamcrest:hamcrest-library:1.3'
	// testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
	// testCompile "org.spockframework:spock-core:1.0-groovy-2.3-SNAPSHOT"
	compile gradleApi()

}

task sourceJar(type: Jar) {
	classifier 'sources'
	from sourceSets.main.allSource
}

test {
	// When executing test bouncy castle from gradle is different signature than bouncy castle from java-dockker
	// so remove it.
	classpath = classpath.filter { File f ->
		!(f.name in ['bcprov-jdk15-1.46.jar', 'commons-io-1.4.jar'])
	}
	dependsOn testClasses
}

publishing {
	publications {
		plugin(MavenPublication) {
			artifactId artifact

			from components.java
			artifact sourceJar

			pom.withXml {
				asNode().appendNode('description', project.description)
			}
		}
	}
}


bintray {
	// E.g. defined in gradle.properties
	user = project.hasProperty('bintrayUser')  ? project.bintrayUser   : '<unset>'
	key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : '<unset>'

	publications = ['plugin']
	dryRun = false //Whether to run this as dry-run, without deploying
	publish = true //If version should be auto published after an upload
	pkg {
		repo = 'gradle-plugins'
		userOrg = 'praqma'
		name = artifact
		desc = project.description
                websiteUrl = github
		vcsUrl = "${project.github}.git"
		licenses = ['Apache-2.0']
		publicDownloadNumbers = true
		//Optional version descriptor
		version {
			attributes = ['gradle-plugin': "${pluginId}:${group}:${artifact}"]
		}
	}
}

task allIntegTests {
	description "Run all integrations tests"
	group 'verify'
}

def geh = new net.praqma.docker.execution.GradleExecutionHelper(project, 'integTest')
file('src/integtest').eachFile { File d ->
	def test = geh.createTask(d.name, d, 'validate', 'Docker Plugin Integration Test')
	allIntegTests.dependsOn test
}
