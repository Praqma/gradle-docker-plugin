plugins { id 'com.jfrog.bintray' version '1.1' }

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

repositories {
    //mavenLocal()
    jcenter()
}

targetCompatibility = sourceCompatibility = '1.7'

group = 'net.praqma.gradle'
version = '0.7'
description = 'Gradle plugin to orchestrate Docker containers'

ext {
    pluginId = 'net.praqma.docker'
    artifact = 'gradle-docker-plugin'
    github = 'https://github.com/Praqma/gradle-docker-plugin'
}

dependencies {
    // compile gradleApi()
    // Workaround for https://issues.gradle.org/browse/GRADLE-2516
    // Get as much as possible with normal dependencies
    def gradleJars = ['gradle-', 'jarjar-']
    compile files(gradleApi().resolve().findAll { File f ->
        gradleJars.any { String jarPrefix -> f.name.startsWith(jarPrefix) }
    })
    //println gradleApi().resolve()*.name.sort().join("\n")
    compile 'org.apache.ant:ant:1.9.4'
    compile 'net.rubygrapefruit:native-platform:0.10'
    compile 'com.jcraft:jsch:0.1.51'
    compile 'org.apache.ivy:ivy:2.4.0'
    compile 'commons-collections:commons-collections:3.2.1'

    //compile localGroovy()
    compile "org.codehaus.groovy:groovy-all:${GroovySystem.version}"

    compile 'com.github.docker-java:docker-java:1.0.0'

    testCompile 'junit:junit:4.11'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    // testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    // testCompile "org.spockframework:spock-core:1.0-groovy-2.3-SNAPSHOT"
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}


test {
    dependsOn testClasses

    systemProperties(
            'net.praqma.boot2dockerBin': System.properties['net.praqma.boot2dockerBin'],
            'net.praqma.dockerHost': System.properties['net.praqma.dockerHost'])
}

publishing {
    publications {
        plugin(MavenPublication) {
            artifactId artifact

            from components.java
            artifact sourceJar

            pom.withXml {
                asNode().appendNode('description', project.description)
            }
        }
    }
}


bintray {
    // E.g. defined in gradle.properties
    user = project.hasProperty('bintrayUser') ? project.bintrayUser : '<unset>'
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : '<unset>'

    publications = ['plugin']
    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload
    pkg {
        repo = 'gradle-plugins'
        userOrg = 'praqma'
        name = artifact
        desc = project.description
        websiteUrl = github
        vcsUrl = "${project.github}.git"
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
        //Optional version descriptor
        version {
            attributes = ['gradle-plugin': "${pluginId}:${group}:${artifact}"]
        }
    }
}

task allIntegTests {
    description "Run all integrations tests"
    group 'verify'
}

def geh = new net.praqma.docker.execution.GradleExecutionHelper(project, configurations.runtime as Collection, 'integTest')
file('src/integtest').eachFile { File d ->
    def test = geh.createTask(d.name, d, 'validate', 'Docker Plugin Integration Test')
    allIntegTests.dependsOn test
}
